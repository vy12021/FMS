<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">

        <!-- 里面的标签有严格顺序
        properties, settings, typeAliases, typeHandlers, objectFactory, objectWrapperFactory, plugins, environments, databaseIdProvider, mappers
        -->
<configuration>

    <!-- <settings>元素添加若干属性来设置这些可选项。MyBatis有许多配置项可用，
    并且每个配置项对于这个SQLMap实例来说都是全局的。
    这些都是非常重要的配置，用于指定MyBatis在运行时的行为。如果不指定，会使用默认值。 -->

    <settings>

        <!-- 在全局范围内"启用或禁用任何高速缓存" - 应该是除了session；默认值true -->
        <setting name="cacheEnabled" value="true" />

        <!-- 延迟加载是一种只加载必要信息而推迟加载其他未明确请求的数据的技术。也就是说，除非绝对需要，否则应用程序加载的数据越少越好。 lazyLoadingEnabled配置项用于指定当存在相关联的已映射语句时，"是否使用延迟加载"。其有效值为true或false，默认值为true。 -->
        <!-- <setting name="lazyLoadingEnabled" value="true" /> -->

        <!-- 开启懒加载。默认值为true -->
        <!-- <setting name="aggressiveLazyLoading" value="true" /> -->

        <!-- 指定对象中什么方法会触发延迟加载。值为以逗号分隔的方法名称列表。 -->
        <!-- <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"
            /> -->

        <!-- 是否允许一个statement返回多个ResultSets，但是需要驱动程序支持。默认值true -->
        <setting name="multipleResultSetsEnabled" value="true" />

        <!-- 是否可以使用别名获取，具体取决于驱动程序是否支持。默认为true -->
        <setting name="useColumnLabel" value="true" />

        <!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行（比如Derby）。默认值false -->
        <!-- <setting name="useGeneratedKeys" value="false" /> -->

        <!-- 指定是否以及如何自动映射数据字段到POJO字段。三个选项：NONE不自动映射；PARTIAL将只自动映射简单的，没有嵌套的结果；FULL将自动映射任何（包含嵌套或以其他方式）复杂的结果。默认值PARTIAL -->
        <setting name="autoMappingBehavior" value="PARTIAL" />

        <!-- 默认执行方式。三种方式：SIMPLE默认没有特殊处理；REUSE重用PreparedStatements；BATCH重用statements和进行批量更新。默认值：SIMPLE -->
        <setting name="defaultExecutorType" value="SIMPLE" />

        <!-- 设置Statement默认数据库响应超时时间，单位为妙。 -->
        <setting name="defaultStatementTimeout" value="1" />

        <!-- 嵌套结果映射，是否使用rowbounds进行分页，建议不要使用rowbounds进行分页，特别是SQL执行返回结果很大的情况下（因为它用的是返回后截取-逻辑分页）。默认值false -->
        <setting name="safeRowBoundsEnabled" value="false" />

        <!-- 进行自动映射时，数据以下划线命名，如数据库返回的"order_address"命名字段是否映射为class的"orderAddress"字段。默认为false -->
        <setting name="mapUnderscoreToCamelCase" value="false" />

        <!-- MyBatis使用本地缓存来提高重复查询的速度。两个选项：SESSION，和我们hibernate里的session类似，在同一个session中共享；STATEMENT，只在同一个statement中共享。默认值SESSION -->
        <setting name="localCacheScope" value="SESSION" />

        <!-- 有些驱动程序在返回值为NULL时需要指定JDBC类型，大部分情况下是：NULL、VARCHAR或OTHER。默认值OTHER -->
        <setting name="jdbcTypeForNull" value="OTHER" />

    </settings>




    <!-- 别名"在mybatis配置文件中使用" note:mybatis对各种类型大小写不敏感
    我们可以使用更简洁的方式，指定一个包，MyBatis会自动扫描包下的所有类，
    以非限定类名首字母小写来作为别名，当然你也可以使用@Alias注解手工指定：
    -->
    <!-- mybatis内建java基本数据类型别名映射
        Alias Mapped Type
        _byte byte
        _long long
        _short short
        _int int
        _integer int
        _double double
        _float float
        _boolean boolean
        string String
        byte Byte
        long Long
        short Short
        int Integer
        integer Integer
        double Double
        float Float
        boolean Boolean
        date Date
        decimal Decimal
        bigdecimal  BigDecimal
        object Object
        map Map
        hashmap HashMap
        list List
        arraylist ArrayList
        collection Collection
        iterator Iterator
    -->

    <typeAliases>
        <package name="com.springapp.mvc.model" />
        <package name="com.framework.sysmgmt.security.model" />
    </typeAliases>

    <mappers>
        <mapper resource="com/framework/paging/common.xml" />
    </mappers>
</configuration>