<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.framework.sysmgmt.security.dao.UserMapper">

    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="pojo.id"  keyColumn="ID">
        insert into ks_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.username != null">
                username,
            </if>
            <if test="pojo.password != null">
                password,
            </if>
            <if test="pojo.activateStatus != null">
                activateStatus,
            </if>
            <if test="pojo.createDate != null">
                createDate,
            </if>
            <if test="pojo.created != null">
                created
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.username != null">
                #{pojo.username},
            </if>
            <if test="pojo.password != null">
                #{pojo.password},
            </if>
            <if test="pojo.activateStatus != null">
                #{pojo.activateStatus},
            </if>
            <if test="pojo.createDate != null">
                #{pojo.createDate},
            </if>
            <if test="pojo.created != null">
                #{pojo.created}
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="User">
        update ks_user
        <set>
            <trim prefix=" " suffix=" " suffixOverrides=",">
                <if test="pojo.username != null">
                    username=#{pojo.username},
                </if>
                <if test="pojo.password != null">
                    password=#{pojo.password},
                </if>
                <if test="pojo.activateStatus != null">
                    activateStatus=#{pojo.activateStatus},
                </if>
                <if test="pojo.createDate != null">
                    createDate=#{pojo.createDate},
                </if>
                <if test="pojo.created != null">
                    created=#{pojo.created}
                </if>
            </trim>
        </set>
        where id = #{pojo.id}
    </update>

    <resultMap id="SimpleUserInfo" type="User" autoMapping="true">
        <id column="ku_id" property="id" />
        <result column="ku_username" property="username" />
        <result column="ku_password" property="password" />
        <result column="ku_activateStatus" property="activateStatus" />
        <result column="ku_createDate" property="createDate" />
        <result column="ku_created" property="created" />
        <association property="userInfo" javaType="UserInfo">
            <id column="kui_id" property="id" />
            <result column="kui_userId" property="userId" />
            <result column="kui_realName" property="realName" />
            <result column="kui_sex" property="sex" />
            <result column="kui_age" property="age" />
            <result column="kui_email" property="email" />
            <result column="kui_phone" property="phone" />
        </association>
    </resultMap>

    <select id="findById" parameterType="int" resultMap="SimpleUserInfo">
        select
        ku.id as ku_id,
        ku.username as ku_username,
        ku.password as ku_password,
        ku.activateStatus as ku_activateStatus,
        ku.createDate as ku_createDate,
        ku.created as ku_created,
        kui.id as kui_id,
        kui.userId as kui_userId,
        kui.realName as kui_realName,
        kui.sex as kui_sex,
        kui.age as kui_age,
        kui.email as kui_email,
        kui.phone as kui_phone
        from ks_user as ku
        left outer join ks_userInfo as kui on kui.userId=ku.id
        where ku.id=#{id}
    </select>

    <select id="findByIds" parameterType="int" resultType="User">
        select * from ks_user as ku
        where ku.id in
        <foreach collection="ids" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <resultMap id="UserInfoResult" type="User" autoMapping="true">
        <id column="ku_id" property="id" />
        <result column="ku_username" property="username" />
        <result column="ku_password" property="password" />
        <result column="ku_activateStatus" property="activateStatus" />
        <result column="ku_createDate" property="createDate" />
        <result column="ku_created" property="created" />
        <association property="userInfo" javaType="UserInfo">
            <id column="kui_id" property="id" />
            <result column="kui_userId" property="userId" />
            <result column="kui_realName" property="realName" />
            <result column="kui_sex" property="sex" />
            <result column="kui_age" property="age" />
            <result column="kui_email" property="email" />
            <result column="kui_phone" property="phone" />
        </association>
        <collection property="groupList" javaType="ArrayList" ofType="Group">
            <id column="kg_id" property="id"/>
            <result column="kg_groupName" property="groupName" />
            <result column="kg_description" property="description" />
            <result column="kg_createDate" property="createDate" />
            <result column="kg_created" property="created" />
            <!--<collection property="accountPermissionList" javaType="ArrayList" ofType="AccountPermission">
                <id column="kp_id" property="id" />
                <result column="kp_permissionName" property="permissionName" />
                <result column="kp_description" property="description" />
                <result column="kp_createDate" property="createDate" />
                <result column="kp_created" property="created" />
            </collection>-->
        </collection>
    </resultMap>

    <select id="findByUsername" parameterType="int" resultMap="UserInfoResult">
        select
        ku.id as ku_id,
        ku.username as ku_username,
        ku.password as ku_password,
        ku.activateStatus as ku_activateStatus,
        ku.createDate as ku_createDate,
        ku.created as ku_created,
        kui.id as kui_id,
        kui.userId as kui_userId,
        kui.realName as kui_realName,
        kui.sex as kui_sex,
        kui.age as kui_age,
        kui.email as kui_email,
        kui.phone as kui_phone,
        kg.id as kg_id,
        kg.groupName as kg_groupName,
        kg.description as kg_description,
        kg.createDate as kg_createDate,
        kg.created as kg_created
        /*kp.id as kp_id,
        kp.permissionName as kp_permissionName,
        kp.description as kp_description,
        kp.createDate as kp_createDate,
        kp.created as kp_created*/
        from ks_user as ku
        left outer join ks_userInfo as kui on kui.userId=ku.id
        left outer join ks_user_group as kup on kup.userId=ku.id
        left outer join ks_group as kg on kg.id=kup.groupId
        /*left outer join ks_group_permission as kgp on kgp.groupId=kg.id
        left outer join ks_permission as kp on kp.id=kgp.permissionId*/
        where ku.username = #{username}
    </select>

    <delete id="deleteByIds" parameterType="int">
        delete from ks_user where id in
        <foreach collection="ids" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="findAll" resultType="User">
        select * from ks_user
    </select>

</mapper>